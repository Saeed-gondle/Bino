{"mappings":"AAAA,iBAAiB;AACjB,2DAA2D;AAE3D,6BAA6B;AAC7B,kEAAkE;AAClE,IAAI;AAEJ,gCAAgC;AAChC,aAAa;AACb,qBAAqB;AACrB,IAAI;AAEJ,uFAAuF;AAEvF,mBAAmB;AAEnB,4HAA4H;AAG5H,yDAAyD;AACzD,yDAAyD;AACzD,yDAAyD;AACzD,yDAAyD;AACzD,yDAAyD;AACzD,8CAA8C;AAC9C,mBAAmB;AACnB,mBAAmB;AACnB,mBAAmB;AACnB,mBAAmB;AACnB,mBAAmB;AACnB,6CAA6C;AAC7C,iCAAiC;AAEjC,wBAAwB;AAExB,+BAA+B;AAC/B,4DAA4D;AAC5D,MAAM;AAEN,kCAAkC;AAClC,qCAAqC;AACrC,uBAAuB;AACvB,MAAM;AAEN,sCAAsC;AACtC,MAAM;AAEN,6CAA6C;AAC7C,wBAAwB;AAExB,+BAA+B;AAC/B,4DAA4D;AAC5D,MAAM;AAEN,kCAAkC;AAClC,qCAAqC;AACrC,uBAAuB;AACvB,MAAM;AAEN,sCAAsC;AACtC,MAAM;AAEN,6CAA6C;AAC7C,wBAAwB;AACxB,+BAA+B;AAC/B,4DAA4D;AAC5D,MAAM;AAEN,kCAAkC;AAClC,qCAAqC;AACrC,uBAAuB;AACvB,MAAM;AAEN,sCAAsC;AACtC,MAAM;AAEN,6CAA6C;AAC7C,wBAAwB;AAExB,+BAA+B;AAC/B,4DAA4D;AAC5D,MAAM;AAEN,kCAAkC;AAClC,qCAAqC;AACrC,uBAAuB;AACvB,MAAM;AAEN,sCAAsC;AACtC,MAAM;AAEN,6CAA6C;AAC7C,wBAAwB;AAExB,+BAA+B;AAC/B,4DAA4D;AAC5D,MAAM;AAEN,kCAAkC;AAClC,qCAAqC;AACrC,uBAAuB;AACvB,MAAM;AAEN,sCAAsC;AACtC,MAAM;AACN,MAAM,WAAW,SAAS,aAAa,CAAC;AACxC,MAAM,UAAU,SAAS,aAAa,CAAC;AACvC,MAAM,UAAU,SAAS,aAAa,CAAC;AACvC,MAAM,WAAW,SAAS,aAAa,CAAC;AAExC,SAAS,gBAAgB,CAAC,SAAS;IACjC,SAAS,SAAS,CAAC,MAAM,CAAC;IAC1B,QAAQ,SAAS,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;IAChC,QAAQ,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC;IAC/B,SAAS,YAAY,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,kBAAkB,CAAC;AACrD;AACA,QAAQ,gBAAgB,CAAC,SAAS;IAChC,SAAS,SAAS,CAAC,MAAM,CAAC;IAC1B,QAAQ,SAAS,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;IAChC,QAAQ,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC;IAC/B,SAAS,eAAe,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,kBAAkB,CAAC;AAExD;AACA,SAAS,gBAAgB,SAAS;IAChC,MAAM,UAAU,SAAS,aAAa,CAAC;IACvC,OAAO,QAAQ,CAAC;QACd,KAAK,QAAQ,SAAS;QACtB,UAAU;IACZ;AACF;AAEA,6CAA6C;AAC7C,MAAM,WAAW,SAAS,gBAAgB,CAAC;AAC3C,SAAS,OAAO,CAAC,CAAC;IAChB,KAAK,gBAAgB,CAAC,SAAS,CAAC;QAC9B,MAAM,cAAc;QACpB,MAAM,kBAAkB,KAAK,YAAY,CAAC;QAC1C,gBAAgB;IAClB;AACF","sources":["js/script.js"],"sourcesContent":["// let count = 0;\r\n// const counterElement = document.getElementById(\"count\");\r\n\r\n// function updateCounter() {\r\n//   counterElement.innerText = count.toString().padStart(2, \"0\");\r\n// }\r\n\r\n// function incrementCounter() {\r\n//   count++;\r\n//   updateCounter();\r\n// }\r\n\r\n// setInterval(incrementCounter, 1000); // Increment every 1000 milliseconds (1 second)\r\n\r\n// updateCounter();\r\n\r\n// <img width=\"50\" height=\"50\" src=\"https://img.icons8.com/ios-filled/50/000000/long-arrow-down.png\" alt=\"long-arrow-down\"/>\r\n\r\n\r\n// let dg_1 = document.querySelector(`.digital-count-1`);\r\n// let dg_2 = document.querySelector(`.digital-count-2`);\r\n// let dg_3 = document.querySelector(`.digital-count-3`);\r\n// let dg_4 = document.querySelector(`.digital-count-4`);\r\n// let dg_5 = document.querySelector(`.digital-count-5`);\r\n// let con = document.querySelector(`#stats`);\r\n// let count_1 = 0;\r\n// let count_2 = 0;\r\n// let count_3 = 0;\r\n// let count_4 = 0;\r\n// let count_5 = 0;\r\n// con.addEventListener(`mouseenter`, () => {\r\n//   console.log(`onmouseenter`);\r\n\r\n//   // 01 digital count\r\n\r\n//   function updateCounter() {\r\n//     dg_1.innerText = count_1.toString().padStart(2, \"0\");\r\n//   }\r\n\r\n//   function incrementCounter() {\r\n//     if (count_1 < 3891) count_1++;\r\n//     updateCounter();\r\n//   }\r\n\r\n//   setInterval(incrementCounter, 1);\r\n// });\r\n\r\n// con.addEventListener(`mouseenter`, () => {\r\n//   // 02 digital count\r\n\r\n//   function updateCounter() {\r\n//     dg_2.innerText = count_2.toString().padStart(2, \"0\");\r\n//   }\r\n\r\n//   function incrementCounter() {\r\n//     if (count_2 < 3891) count_2++;\r\n//     updateCounter();\r\n//   }\r\n\r\n//   setInterval(incrementCounter, 1);\r\n// });\r\n\r\n// con.addEventListener(`mouseenter`, () => {\r\n//   // 03 digital count\r\n//   function updateCounter() {\r\n//     dg_3.innerText = count_3.toString().padStart(2, \"0\");\r\n//   }\r\n\r\n//   function incrementCounter() {\r\n//     if (count_3 < 3891) count_3++;\r\n//     updateCounter();\r\n//   }\r\n\r\n//   setInterval(incrementCounter, 1);\r\n// });\r\n\r\n// con.addEventListener(`mouseenter`, () => {\r\n//   // 04 digital count\r\n\r\n//   function updateCounter() {\r\n//     dg_4.innerText = count_4.toString().padStart(2, \"0\");\r\n//   }\r\n\r\n//   function incrementCounter() {\r\n//     if (count_4 < 3891) count_4++;\r\n//     updateCounter();\r\n//   }\r\n\r\n//   setInterval(incrementCounter, 1);\r\n// });\r\n\r\n// con.addEventListener(`mouseenter`, () => {\r\n//   // 05 digital count\r\n\r\n//   function updateCounter() {\r\n//     dg_5.innerText = count_5.toString().padStart(2, \"0\");\r\n//   }\r\n\r\n//   function incrementCounter() {\r\n//     if (count_5 < 3891) count_5++;\r\n//     updateCounter();\r\n//   }\r\n\r\n//   setInterval(incrementCounter, 1);\r\n// });\r\nconst btnNavEl = document.querySelector(\".btn-mobile-nav\");\r\nconst btnNavc = document.querySelector(\".c-menu\");\r\nconst btnNavo = document.querySelector(\".o-menu\");\r\nconst headerEl = document.querySelector(\"header\");\r\n\r\nbtnNavEl.addEventListener(\"click\", function () {\r\n  headerEl.classList.toggle(\"nav-open\");\r\n  btnNavc.classList.toggle(`close`);\r\n  btnNavo.classList.toggle(`open`);\r\n  headerEl.setAttribute(`style`, `visibility:hidden;`);\r\n});\r\nbtnNavc.addEventListener(\"click\", function () {\r\n  headerEl.classList.toggle(\"nav-open\");\r\n  btnNavc.classList.toggle(`close`);\r\n  btnNavo.classList.toggle(`open`);\r\n  headerEl.removeAttribute(`style`, `visibility:hidden;`);\r\n\r\n});\r\nfunction scrollToSection(sectionId) {\r\n  const section = document.querySelector(sectionId);\r\n  window.scrollTo({\r\n    top: section.offsetTop,\r\n    behavior: \"smooth\",\r\n  });\r\n}\r\n\r\n// Attach event listeners to navigation links\r\nconst navLinks = document.querySelectorAll(\".nav-link a\");\r\nnavLinks.forEach((link) => {\r\n  link.addEventListener(\"click\", (event) => {\r\n    event.preventDefault();\r\n    const targetSectionId = link.getAttribute(\"href\");\r\n    scrollToSection(targetSectionId);\r\n  });\r\n});\r\n"],"names":[],"version":3,"file":"index.1c974c2f.js.map","sourceRoot":"/__parcel_source_root/"}